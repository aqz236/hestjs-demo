"use strict";(self.webpackChunkhestjs_docs=self.webpackChunkhestjs_docs||[]).push([[8071],{2252:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"fundamentals/controllers","title":"\u63a7\u5236\u5668\u548c\u8def\u7531","description":"\u63a7\u5236\u5668\u662f HestJS \u5e94\u7528\u7a0b\u5e8f\u4e2d\u5904\u7406 HTTP \u8bf7\u6c42\u7684\u6838\u5fc3\u7ec4\u4ef6\u3002\u5b83\u4eec\u8d1f\u8d23\u63a5\u6536\u5ba2\u6237\u7aef\u8bf7\u6c42\u3001\u8c03\u7528\u76f8\u5e94\u7684\u4e1a\u52a1\u903b\u8f91\uff0c\u5e76\u8fd4\u56de\u54cd\u5e94\u3002\u672c\u6307\u5357\u5c06\u8be6\u7ec6\u4ecb\u7ecd\u5982\u4f55\u521b\u5efa\u548c\u4f7f\u7528\u63a7\u5236\u5668\u3002","source":"@site/docs/fundamentals/controllers.md","sourceDirName":"fundamentals","slug":"/fundamentals/controllers","permalink":"/hestjs-demo/zh-CN/docs/fundamentals/controllers","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/fundamentals/controllers.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"CLI \u5de5\u5177","permalink":"/hestjs-demo/zh-CN/docs/getting-started/cli-usage"},"next":{"title":"\u6a21\u5757\u7cfb\u7edf","permalink":"/hestjs-demo/zh-CN/docs/fundamentals/modules"}}');var t=r(4848),i=r(8453);const a={},o="\u63a7\u5236\u5668\u548c\u8def\u7531",l={},d=[{value:"\ud83c\udfaf \u63a7\u5236\u5668\u57fa\u7840",id:"-\u63a7\u5236\u5668\u57fa\u7840",level:2},{value:"\u521b\u5efa\u63a7\u5236\u5668",id:"\u521b\u5efa\u63a7\u5236\u5668",level:3},{value:"\u8def\u7531\u88c5\u9970\u5668",id:"\u8def\u7531\u88c5\u9970\u5668",level:3},{value:"\ud83d\udcdd \u8def\u5f84\u53c2\u6570\u5904\u7406",id:"-\u8def\u5f84\u53c2\u6570\u5904\u7406",level:2},{value:"\u57fa\u672c\u8def\u5f84\u53c2\u6570",id:"\u57fa\u672c\u8def\u5f84\u53c2\u6570",level:3},{value:"\u591a\u4e2a\u8def\u5f84\u53c2\u6570",id:"\u591a\u4e2a\u8def\u5f84\u53c2\u6570",level:3},{value:"\ud83d\udd0d \u67e5\u8be2\u53c2\u6570\u5904\u7406",id:"-\u67e5\u8be2\u53c2\u6570\u5904\u7406",level:2},{value:"\ud83d\udce6 \u8bf7\u6c42\u4f53\u5904\u7406",id:"-\u8bf7\u6c42\u4f53\u5904\u7406",level:2},{value:"\u57fa\u672c\u8bf7\u6c42\u4f53",id:"\u57fa\u672c\u8bf7\u6c42\u4f53",level:3},{value:"\u7ed3\u5408\u9a8c\u8bc1\u7684\u8bf7\u6c42\u4f53",id:"\u7ed3\u5408\u9a8c\u8bc1\u7684\u8bf7\u6c42\u4f53",level:3},{value:"\ud83d\udccb \u8bf7\u6c42\u5934\u5904\u7406",id:"-\u8bf7\u6c42\u5934\u5904\u7406",level:2},{value:"\ud83d\udd04 \u8bf7\u6c42\u548c\u54cd\u5e94\u5bf9\u8c61",id:"-\u8bf7\u6c42\u548c\u54cd\u5e94\u5bf9\u8c61",level:2},{value:"\u8bbf\u95ee\u539f\u59cb\u8bf7\u6c42\u5bf9\u8c61",id:"\u8bbf\u95ee\u539f\u59cb\u8bf7\u6c42\u5bf9\u8c61",level:3},{value:"\ud83c\udfaf \u72b6\u6001\u7801\u548c\u54cd\u5e94",id:"-\u72b6\u6001\u7801\u548c\u54cd\u5e94",level:2},{value:"\u81ea\u5b9a\u4e49\u72b6\u6001\u7801",id:"\u81ea\u5b9a\u4e49\u72b6\u6001\u7801",level:3},{value:"\ud83d\udd00 \u5b50\u63a7\u5236\u5668\u548c\u5d4c\u5957\u8def\u7531",id:"-\u5b50\u63a7\u5236\u5668\u548c\u5d4c\u5957\u8def\u7531",level:2},{value:"\u6a21\u5757\u5316\u8def\u7531\u7ec4\u7ec7",id:"\u6a21\u5757\u5316\u8def\u7531\u7ec4\u7ec7",level:3},{value:"\ud83d\udd27 \u63a7\u5236\u5668\u4f9d\u8d56\u6ce8\u5165",id:"-\u63a7\u5236\u5668\u4f9d\u8d56\u6ce8\u5165",level:2},{value:"\u6ce8\u5165\u670d\u52a1",id:"\u6ce8\u5165\u670d\u52a1",level:3},{value:"\u53ef\u9009\u4f9d\u8d56",id:"\u53ef\u9009\u4f9d\u8d56",level:3},{value:"\ud83d\udea8 \u9519\u8bef\u5904\u7406",id:"-\u9519\u8bef\u5904\u7406",level:2},{value:"\u63a7\u5236\u5668\u7ea7\u9519\u8bef\u5904\u7406",id:"\u63a7\u5236\u5668\u7ea7\u9519\u8bef\u5904\u7406",level:3},{value:"\ud83d\udcca \u5b8c\u6574\u793a\u4f8b",id:"-\u5b8c\u6574\u793a\u4f8b",level:2},{value:"\ud83d\udcda \u6700\u4f73\u5b9e\u8df5",id:"-\u6700\u4f73\u5b9e\u8df5",level:2},{value:"1. \u8def\u7531\u7ec4\u7ec7",id:"1-\u8def\u7531\u7ec4\u7ec7",level:3},{value:"2. \u9519\u8bef\u5904\u7406",id:"2-\u9519\u8bef\u5904\u7406",level:3},{value:"3. \u9a8c\u8bc1\u548c\u8f6c\u6362",id:"3-\u9a8c\u8bc1\u548c\u8f6c\u6362",level:3},{value:"4. \u6587\u6863\u5316",id:"4-\u6587\u6863\u5316",level:3},{value:"\ud83d\udcda \u4e0b\u4e00\u6b65",id:"-\u4e0b\u4e00\u6b65",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"\u63a7\u5236\u5668\u548c\u8def\u7531",children:"\u63a7\u5236\u5668\u548c\u8def\u7531"})}),"\n",(0,t.jsx)(n.p,{children:"\u63a7\u5236\u5668\u662f HestJS \u5e94\u7528\u7a0b\u5e8f\u4e2d\u5904\u7406 HTTP \u8bf7\u6c42\u7684\u6838\u5fc3\u7ec4\u4ef6\u3002\u5b83\u4eec\u8d1f\u8d23\u63a5\u6536\u5ba2\u6237\u7aef\u8bf7\u6c42\u3001\u8c03\u7528\u76f8\u5e94\u7684\u4e1a\u52a1\u903b\u8f91\uff0c\u5e76\u8fd4\u56de\u54cd\u5e94\u3002\u672c\u6307\u5357\u5c06\u8be6\u7ec6\u4ecb\u7ecd\u5982\u4f55\u521b\u5efa\u548c\u4f7f\u7528\u63a7\u5236\u5668\u3002"}),"\n",(0,t.jsx)(n.h2,{id:"-\u63a7\u5236\u5668\u57fa\u7840",children:"\ud83c\udfaf \u63a7\u5236\u5668\u57fa\u7840"}),"\n",(0,t.jsx)(n.h3,{id:"\u521b\u5efa\u63a7\u5236\u5668",children:"\u521b\u5efa\u63a7\u5236\u5668"}),"\n",(0,t.jsxs)(n.p,{children:["\u4f7f\u7528 ",(0,t.jsx)(n.code,{children:"@Controller()"})," \u88c5\u9970\u5668\u5c06\u4e00\u4e2a\u7c7b\u6807\u8bb0\u4e3a\u63a7\u5236\u5668\uff1a"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { Controller, Get } from '@hestjs/core';\nimport { Context } from 'hono';\n\n@Controller('/api/users')\nexport class UsersController {\n  @Get()\n  findAll(c: Context) {\n    return c.json({ users: [] });\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"\u8def\u7531\u88c5\u9970\u5668",children:"\u8def\u7531\u88c5\u9970\u5668"}),"\n",(0,t.jsx)(n.p,{children:"HestJS \u63d0\u4f9b\u4e86\u5b8c\u6574\u7684 HTTP \u65b9\u6cd5\u88c5\u9970\u5668\uff1a"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { \n  Controller, \n  Get, \n  Post, \n  Put, \n  Delete, \n  Patch \n} from '@hestjs/core';\nimport { Context } from 'hono';\n\n@Controller('/api/users')\nexport class UsersController {\n  @Get()                    // GET /api/users\n  findAll(c: Context) {\n    return c.json({ users: [] });\n  }\n\n  @Get('/:id')             // GET /api/users/:id\n  findById(c: Context) {\n    return c.json({ user: {} });\n  }\n\n  @Post()                  // POST /api/users\n  create(c: Context) {\n    return c.json({ user: {}, message: 'Created' });\n  }\n\n  @Put('/:id')             // PUT /api/users/:id\n  update(c: Context) {\n    return c.json({ user: {}, message: 'Updated' });\n  }\n\n  @Delete('/:id')          // DELETE /api/users/:id\n  remove(c: Context) {\n    return c.json({ message: 'Deleted' });\n  }\n\n  @Patch('/:id')           // PATCH /api/users/:id\n  partialUpdate(c: Context) {\n    return c.json({ user: {}, message: 'Partially updated' });\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"-\u8def\u5f84\u53c2\u6570\u5904\u7406",children:"\ud83d\udcdd \u8def\u5f84\u53c2\u6570\u5904\u7406"}),"\n",(0,t.jsx)(n.h3,{id:"\u57fa\u672c\u8def\u5f84\u53c2\u6570",children:"\u57fa\u672c\u8def\u5f84\u53c2\u6570"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { Controller, Get, Param } from '@hestjs/core';\nimport { Context } from 'hono';\n\n@Controller('/api/users')\nexport class UsersController {\n  @Get('/:id')\n  findById(@Param('id') id: string, c: Context) {\n    console.log('User ID:', id); // \u4ece URL \u4e2d\u63d0\u53d6\u7684 ID\n    return c.json({ user: { id } });\n  }\n\n  @Get('/:userId/posts/:postId')\n  findUserPost(\n    @Param('userId') userId: string,\n    @Param('postId') postId: string,\n    c: Context\n  ) {\n    return c.json({ \n      user: { id: userId },\n      post: { id: postId }\n    });\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"\u591a\u4e2a\u8def\u5f84\u53c2\u6570",children:"\u591a\u4e2a\u8def\u5f84\u53c2\u6570"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"@Controller('/api')\nexport class ApiController {\n  @Get('/users/:userId/orders/:orderId/items/:itemId')\n  getOrderItem(\n    @Param('userId') userId: string,\n    @Param('orderId') orderId: string,\n    @Param('itemId') itemId: string,\n    c: Context\n  ) {\n    return c.json({\n      userId,\n      orderId,\n      itemId,\n      item: {} // \u5b9e\u9645\u7684\u4e1a\u52a1\u903b\u8f91\n    });\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"-\u67e5\u8be2\u53c2\u6570\u5904\u7406",children:"\ud83d\udd0d \u67e5\u8be2\u53c2\u6570\u5904\u7406"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { Controller, Get, Query } from '@hestjs/core';\nimport { Context } from 'hono';\n\n@Controller('/api/users')\nexport class UsersController {\n  @Get()\n  findAll(\n    @Query('page') page?: string,\n    @Query('limit') limit?: string,\n    @Query('search') search?: string,\n    c: Context\n  ) {\n    // \u67e5\u8be2\u53c2\u6570\u5904\u7406\n    const pageNum = page ? parseInt(page, 10) : 1;\n    const limitNum = limit ? parseInt(limit, 10) : 10;\n    \n    console.log('Query params:', { page: pageNum, limit: limitNum, search });\n    \n    return c.json({\n      users: [],\n      pagination: {\n        page: pageNum,\n        limit: limitNum,\n        total: 0\n      }\n    });\n  }\n\n  @Get('/search')\n  search(\n    @Query('q') query: string,\n    @Query('category') category?: string,\n    @Query('sort') sort?: string,\n    c: Context\n  ) {\n    return c.json({\n      query,\n      category,\n      sort,\n      results: []\n    });\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"-\u8bf7\u6c42\u4f53\u5904\u7406",children:"\ud83d\udce6 \u8bf7\u6c42\u4f53\u5904\u7406"}),"\n",(0,t.jsx)(n.h3,{id:"\u57fa\u672c\u8bf7\u6c42\u4f53",children:"\u57fa\u672c\u8bf7\u6c42\u4f53"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { Controller, Post, Body } from '@hestjs/core';\nimport { Context } from 'hono';\n\ninterface CreateUserDto {\n  name: string;\n  email: string;\n  age: number;\n}\n\n@Controller('/api/users')\nexport class UsersController {\n  @Post()\n  create(@Body() createUserDto: CreateUserDto, c: Context) {\n    console.log('Received data:', createUserDto);\n    \n    // \u4e1a\u52a1\u903b\u8f91\u5904\u7406\n    const newUser = {\n      id: Date.now().toString(),\n      ...createUserDto,\n      createdAt: new Date()\n    };\n    \n    return c.json({\n      success: true,\n      user: newUser\n    });\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"\u7ed3\u5408\u9a8c\u8bc1\u7684\u8bf7\u6c42\u4f53",children:"\u7ed3\u5408\u9a8c\u8bc1\u7684\u8bf7\u6c42\u4f53"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { Controller, Post, Body } from '@hestjs/core';\nimport { IsString, IsEmail, IsNumber } from '@hestjs/validation';\n\nexport class CreateUserDto {\n  @IsString({ minLength: 2, maxLength: 50 })\n  name!: string;\n\n  @IsEmail()\n  email!: string;\n\n  @IsNumber({ minimum: 0, maximum: 150 })\n  age!: number;\n}\n\n@Controller('/api/users')\nexport class UsersController {\n  @Post()\n  create(@Body(CreateUserDto) createUserDto: CreateUserDto) {\n    // createUserDto \u5df2\u7ecf\u8fc7\u9a8c\u8bc1\uff0c\u7c7b\u578b\u5b89\u5168\n    return {\n      success: true,\n      user: createUserDto\n    };\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"-\u8bf7\u6c42\u5934\u5904\u7406",children:"\ud83d\udccb \u8bf7\u6c42\u5934\u5904\u7406"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { Controller, Get, Post, Headers } from '@hestjs/core';\n\n@Controller('/api/users')\nexport class UsersController {\n  @Get()\n  findAll(@Headers('authorization') auth?: string) {\n    if (!auth) {\n      return { error: 'Authorization header required' };\n    }\n    \n    // \u5904\u7406\u8ba4\u8bc1\u903b\u8f91\n    const token = auth.replace('Bearer ', '');\n    console.log('Token:', token);\n    \n    return { users: [] };\n  }\n\n  @Post()\n  create(\n    @Headers('content-type') contentType: string,\n    @Headers('user-agent') userAgent: string,\n    @Body() userData: any\n  ) {\n    console.log('Content-Type:', contentType);\n    console.log('User-Agent:', userAgent);\n    \n    return { success: true };\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"-\u8bf7\u6c42\u548c\u54cd\u5e94\u5bf9\u8c61",children:"\ud83d\udd04 \u8bf7\u6c42\u548c\u54cd\u5e94\u5bf9\u8c61"}),"\n",(0,t.jsx)(n.h3,{id:"\u8bbf\u95ee\u539f\u59cb\u8bf7\u6c42\u5bf9\u8c61",children:"\u8bbf\u95ee\u539f\u59cb\u8bf7\u6c42\u5bf9\u8c61"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { Controller, Get, Req, Res } from '@hestjs/core';\nimport type { Context } from 'hono';\n\n@Controller('/api')\nexport class ApiController {\n  @Get('/request-info')\n  getRequestInfo(@Req() req: Context['req']) {\n    return {\n      method: req.method,\n      url: req.url,\n      path: req.path,\n      headers: Object.fromEntries(req.headers.entries())\n    };\n  }\n\n  @Get('/custom-response')\n  customResponse(@Res() res: Context) {\n    // \u76f4\u63a5\u64cd\u4f5c\u54cd\u5e94\u5bf9\u8c61\n    return res.json({\n      message: 'Custom response',\n      timestamp: new Date().toISOString()\n    }, 200);\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"-\u72b6\u6001\u7801\u548c\u54cd\u5e94",children:"\ud83c\udfaf \u72b6\u6001\u7801\u548c\u54cd\u5e94"}),"\n",(0,t.jsx)(n.h3,{id:"\u81ea\u5b9a\u4e49\u72b6\u6001\u7801",children:"\u81ea\u5b9a\u4e49\u72b6\u6001\u7801"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { Controller, Post, HttpStatus } from '@hestjs/core';\n\n@Controller('/api/users')\nexport class UsersController {\n  @Post()\n  create(@Body() userData: any) {\n    try {\n      // \u4e1a\u52a1\u903b\u8f91\n      const user = this.createUser(userData);\n      \n      return {\n        statusCode: HttpStatus.CREATED,\n        success: true,\n        user\n      };\n    } catch (error) {\n      return {\n        statusCode: HttpStatus.BAD_REQUEST,\n        success: false,\n        message: error.message\n      };\n    }\n  }\n\n  @Post('/batch')\n  createBatch(@Body() users: any[]) {\n    if (users.length === 0) {\n      return {\n        statusCode: HttpStatus.BAD_REQUEST,\n        message: 'No users provided'\n      };\n    }\n\n    // \u6279\u91cf\u521b\u5efa\u903b\u8f91\n    return {\n      statusCode: HttpStatus.CREATED,\n      message: `Created ${users.length} users`,\n      users: []\n    };\n  }\n\n  private createUser(userData: any) {\n    // \u6a21\u62df\u7528\u6237\u521b\u5efa\n    return { id: '1', ...userData };\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"-\u5b50\u63a7\u5236\u5668\u548c\u5d4c\u5957\u8def\u7531",children:"\ud83d\udd00 \u5b50\u63a7\u5236\u5668\u548c\u5d4c\u5957\u8def\u7531"}),"\n",(0,t.jsx)(n.h3,{id:"\u6a21\u5757\u5316\u8def\u7531\u7ec4\u7ec7",children:"\u6a21\u5757\u5316\u8def\u7531\u7ec4\u7ec7"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// \u4e3b\u63a7\u5236\u5668\n@Controller('/api/users')\nexport class UsersController {\n  @Get()\n  findAll() {\n    return { users: [] };\n  }\n}\n\n// \u7528\u6237\u8d44\u6599\u63a7\u5236\u5668\n@Controller('/api/users/:userId/profile')\nexport class UserProfileController {\n  @Get()\n  getProfile(@Param('userId') userId: string) {\n    return { profile: { userId } };\n  }\n\n  @Put()\n  updateProfile(\n    @Param('userId') userId: string,\n    @Body() profileData: any\n  ) {\n    return { \n      message: 'Profile updated',\n      profile: { userId, ...profileData }\n    };\n  }\n}\n\n// \u7528\u6237\u8ba2\u5355\u63a7\u5236\u5668\n@Controller('/api/users/:userId/orders')\nexport class UserOrdersController {\n  @Get()\n  getOrders(@Param('userId') userId: string) {\n    return { \n      userId,\n      orders: []\n    };\n  }\n\n  @Post()\n  createOrder(\n    @Param('userId') userId: string,\n    @Body() orderData: any\n  ) {\n    return {\n      userId,\n      order: { id: '1', ...orderData }\n    };\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"-\u63a7\u5236\u5668\u4f9d\u8d56\u6ce8\u5165",children:"\ud83d\udd27 \u63a7\u5236\u5668\u4f9d\u8d56\u6ce8\u5165"}),"\n",(0,t.jsx)(n.h3,{id:"\u6ce8\u5165\u670d\u52a1",children:"\u6ce8\u5165\u670d\u52a1"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { Controller, Get, Post, Body, Param } from '@hestjs/core';\nimport { UsersService } from './users.service';\nimport { EmailService } from '../shared/email.service';\nimport { Logger } from '@hestjs/logger';\n\n@Controller('/api/users')\nexport class UsersController {\n  constructor(\n    private readonly usersService: UsersService,\n    private readonly emailService: EmailService,\n    private readonly logger: Logger\n  ) {}\n\n  @Get()\n  async findAll() {\n    this.logger.info('Fetching all users');\n    return await this.usersService.findAll();\n  }\n\n  @Post()\n  async create(@Body() userData: any) {\n    this.logger.info('Creating new user', userData);\n    \n    const user = await this.usersService.create(userData);\n    \n    // \u53d1\u9001\u6b22\u8fce\u90ae\u4ef6\n    await this.emailService.sendWelcomeEmail(user.email, user.name);\n    \n    return {\n      success: true,\n      user\n    };\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"\u53ef\u9009\u4f9d\u8d56",children:"\u53ef\u9009\u4f9d\u8d56"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { Controller, Get } from '@hestjs/core';\nimport { optional, inject } from 'tsyringe';\n\n@Controller('/api/stats')\nexport class StatsController {\n  constructor(\n    @inject('CacheService') \n    @optional() \n    private readonly cacheService?: CacheService\n  ) {}\n\n  @Get()\n  async getStats() {\n    let stats;\n    \n    // \u5982\u679c\u7f13\u5b58\u670d\u52a1\u53ef\u7528\uff0c\u5c1d\u8bd5\u4ece\u7f13\u5b58\u83b7\u53d6\n    if (this.cacheService) {\n      stats = await this.cacheService.get('stats');\n    }\n    \n    if (!stats) {\n      // \u8ba1\u7b97\u7edf\u8ba1\u6570\u636e\n      stats = await this.calculateStats();\n      \n      // \u7f13\u5b58\u7ed3\u679c\uff08\u5982\u679c\u7f13\u5b58\u670d\u52a1\u53ef\u7528\uff09\n      if (this.cacheService) {\n        await this.cacheService.set('stats', stats, 300); // 5\u5206\u949f\n      }\n    }\n    \n    return stats;\n  }\n\n  private async calculateStats() {\n    // \u5b9e\u9645\u7edf\u8ba1\u8ba1\u7b97\u903b\u8f91\n    return {\n      users: 100,\n      posts: 500,\n      comments: 1200\n    };\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"-\u9519\u8bef\u5904\u7406",children:"\ud83d\udea8 \u9519\u8bef\u5904\u7406"}),"\n",(0,t.jsx)(n.h3,{id:"\u63a7\u5236\u5668\u7ea7\u9519\u8bef\u5904\u7406",children:"\u63a7\u5236\u5668\u7ea7\u9519\u8bef\u5904\u7406"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { Controller, Get, Post, Body, HttpStatus } from '@hestjs/core';\n\n@Controller('/api/users')\nexport class UsersController {\n  @Get('/:id')\n  async findById(@Param('id') id: string) {\n    try {\n      const user = await this.usersService.findById(id);\n      \n      if (!user) {\n        return {\n          statusCode: HttpStatus.NOT_FOUND,\n          message: 'User not found'\n        };\n      }\n      \n      return { user };\n    } catch (error) {\n      return {\n        statusCode: HttpStatus.INTERNAL_SERVER_ERROR,\n        message: 'Failed to fetch user',\n        error: error.message\n      };\n    }\n  }\n\n  @Post()\n  async create(@Body() userData: any) {\n    try {\n      // \u9a8c\u8bc1\u7528\u6237\u6570\u636e\n      if (!userData.email) {\n        return {\n          statusCode: HttpStatus.BAD_REQUEST,\n          message: 'Email is required'\n        };\n      }\n\n      // \u68c0\u67e5\u90ae\u7bb1\u662f\u5426\u5df2\u5b58\u5728\n      const existingUser = await this.usersService.findByEmail(userData.email);\n      if (existingUser) {\n        return {\n          statusCode: HttpStatus.CONFLICT,\n          message: 'User with this email already exists'\n        };\n      }\n\n      const user = await this.usersService.create(userData);\n      return {\n        statusCode: HttpStatus.CREATED,\n        user\n      };\n    } catch (error) {\n      return {\n        statusCode: HttpStatus.INTERNAL_SERVER_ERROR,\n        message: 'Failed to create user',\n        error: error.message\n      };\n    }\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"-\u5b8c\u6574\u793a\u4f8b",children:"\ud83d\udcca \u5b8c\u6574\u793a\u4f8b"}),"\n",(0,t.jsx)(n.p,{children:"\u8fd9\u91cc\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u7528\u6237\u7ba1\u7406\u63a7\u5236\u5668\u793a\u4f8b\uff1a"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { \n  Controller, \n  Get, \n  Post, \n  Put, \n  Delete, \n  Body, \n  Param, \n  Query,\n  HttpStatus \n} from '@hestjs/core';\nimport { IsString, IsEmail, IsNumber, IsOptional } from '@hestjs/validation';\nimport { ApiOperation, ApiResponse, ApiBody } from '@hestjs/scalar';\nimport { UsersService } from './users.service';\nimport { Logger } from '@hestjs/logger';\n\n// DTO \u5b9a\u4e49\nexport class CreateUserDto {\n  @IsString({ minLength: 2, maxLength: 50 })\n  name!: string;\n\n  @IsEmail()\n  email!: string;\n\n  @IsNumber({ minimum: 0, maximum: 150 })\n  age!: number;\n}\n\nexport class UpdateUserDto {\n  @IsOptional()\n  @IsString({ minLength: 2, maxLength: 50 })\n  name?: string;\n\n  @IsOptional()\n  @IsEmail()\n  email?: string;\n\n  @IsOptional()\n  @IsNumber({ minimum: 0, maximum: 150 })\n  age?: number;\n}\n\n@Controller('/api/users')\nexport class UsersController {\n  constructor(\n    private readonly usersService: UsersService,\n    private readonly logger: Logger\n  ) {}\n\n  @Get()\n  @ApiOperation({ summary: 'Get all users' })\n  @ApiResponse({ status: 200, description: 'Users retrieved successfully' })\n  async findAll(\n    @Query('page') page = '1',\n    @Query('limit') limit = '10',\n    @Query('search') search?: string\n  ) {\n    this.logger.info('Fetching users', { page, limit, search });\n\n    const pageNum = parseInt(page, 10);\n    const limitNum = parseInt(limit, 10);\n\n    const result = await this.usersService.findAll({\n      page: pageNum,\n      limit: limitNum,\n      search\n    });\n\n    return {\n      users: result.users,\n      pagination: {\n        page: pageNum,\n        limit: limitNum,\n        total: result.total,\n        pages: Math.ceil(result.total / limitNum)\n      }\n    };\n  }\n\n  @Get('/:id')\n  @ApiOperation({ summary: 'Get user by ID' })\n  @ApiResponse({ status: 200, description: 'User found' })\n  @ApiResponse({ status: 404, description: 'User not found' })\n  async findById(@Param('id') id: string) {\n    this.logger.info('Fetching user by ID', { id });\n\n    const user = await this.usersService.findById(id);\n    \n    if (!user) {\n      return {\n        statusCode: HttpStatus.NOT_FOUND,\n        message: 'User not found'\n      };\n    }\n\n    return { user };\n  }\n\n  @Post()\n  @ApiOperation({ summary: 'Create a new user' })\n  @ApiBody({ description: 'User data' })\n  @ApiResponse({ status: 201, description: 'User created successfully' })\n  @ApiResponse({ status: 400, description: 'Invalid input' })\n  async create(@Body(CreateUserDto) createUserDto: CreateUserDto) {\n    this.logger.info('Creating new user', createUserDto);\n\n    try {\n      const user = await this.usersService.create(createUserDto);\n      \n      return {\n        statusCode: HttpStatus.CREATED,\n        user,\n        message: 'User created successfully'\n      };\n    } catch (error) {\n      this.logger.error('Failed to create user', error);\n      \n      return {\n        statusCode: HttpStatus.BAD_REQUEST,\n        message: error.message\n      };\n    }\n  }\n\n  @Put('/:id')\n  @ApiOperation({ summary: 'Update user' })\n  @ApiResponse({ status: 200, description: 'User updated successfully' })\n  @ApiResponse({ status: 404, description: 'User not found' })\n  async update(\n    @Param('id') id: string,\n    @Body(UpdateUserDto) updateUserDto: UpdateUserDto\n  ) {\n    this.logger.info('Updating user', { id, ...updateUserDto });\n\n    try {\n      const user = await this.usersService.update(id, updateUserDto);\n      \n      if (!user) {\n        return {\n          statusCode: HttpStatus.NOT_FOUND,\n          message: 'User not found'\n        };\n      }\n\n      return {\n        user,\n        message: 'User updated successfully'\n      };\n    } catch (error) {\n      this.logger.error('Failed to update user', error);\n      \n      return {\n        statusCode: HttpStatus.BAD_REQUEST,\n        message: error.message\n      };\n    }\n  }\n\n  @Delete('/:id')\n  @ApiOperation({ summary: 'Delete user' })\n  @ApiResponse({ status: 200, description: 'User deleted successfully' })\n  @ApiResponse({ status: 404, description: 'User not found' })\n  async remove(@Param('id') id: string) {\n    this.logger.info('Deleting user', { id });\n\n    const deleted = await this.usersService.remove(id);\n    \n    if (!deleted) {\n      return {\n        statusCode: HttpStatus.NOT_FOUND,\n        message: 'User not found'\n      };\n    }\n\n    return {\n      message: 'User deleted successfully'\n    };\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"-\u6700\u4f73\u5b9e\u8df5",children:"\ud83d\udcda \u6700\u4f73\u5b9e\u8df5"}),"\n",(0,t.jsx)(n.h3,{id:"1-\u8def\u7531\u7ec4\u7ec7",children:"1. \u8def\u7531\u7ec4\u7ec7"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u4f7f\u7528\u6709\u610f\u4e49\u7684\u8def\u5f84\u524d\u7f00"}),"\n",(0,t.jsx)(n.li,{children:"\u9075\u5faa RESTful API \u8bbe\u8ba1\u89c4\u8303"}),"\n",(0,t.jsx)(n.li,{children:"\u4fdd\u6301\u8def\u7531\u7ed3\u6784\u6e05\u6670\u7b80\u6d01"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"2-\u9519\u8bef\u5904\u7406",children:"2. \u9519\u8bef\u5904\u7406"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u7edf\u4e00\u9519\u8bef\u54cd\u5e94\u683c\u5f0f"}),"\n",(0,t.jsx)(n.li,{children:"\u63d0\u4f9b\u6709\u610f\u4e49\u7684\u9519\u8bef\u6d88\u606f"}),"\n",(0,t.jsx)(n.li,{children:"\u8bb0\u5f55\u8be6\u7ec6\u7684\u9519\u8bef\u65e5\u5fd7"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"3-\u9a8c\u8bc1\u548c\u8f6c\u6362",children:"3. \u9a8c\u8bc1\u548c\u8f6c\u6362"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u4f7f\u7528 DTO \u8fdb\u884c\u6570\u636e\u9a8c\u8bc1"}),"\n",(0,t.jsx)(n.li,{children:"\u5728\u63a7\u5236\u5668\u5c42\u8fdb\u884c\u57fa\u672c\u9a8c\u8bc1"}),"\n",(0,t.jsx)(n.li,{children:"\u5c06\u590d\u6742\u4e1a\u52a1\u903b\u8f91\u79fb\u5230\u670d\u52a1\u5c42"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"4-\u6587\u6863\u5316",children:"4. \u6587\u6863\u5316"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u4f7f\u7528 OpenAPI \u88c5\u9970\u5668"}),"\n",(0,t.jsx)(n.li,{children:"\u63d0\u4f9b\u6e05\u6670\u7684\u63a5\u53e3\u63cf\u8ff0"}),"\n",(0,t.jsx)(n.li,{children:"\u5305\u542b\u8bf7\u6c42\u548c\u54cd\u5e94\u793a\u4f8b"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"-\u4e0b\u4e00\u6b65",children:"\ud83d\udcda \u4e0b\u4e00\u6b65"}),"\n",(0,t.jsx)(n.p,{children:"\u5b66\u4e60\u4e86\u63a7\u5236\u5668\u540e\uff0c\u7ee7\u7eed\u6df1\u5165\uff1a"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/hestjs-demo/zh-CN/docs/fundamentals/modules",children:"\u6a21\u5757\u7cfb\u7edf"})," - \u7ec4\u7ec7\u4ee3\u7801\u7ed3\u6784"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/hestjs-demo/zh-CN/docs/fundamentals/dependency-injection",children:"\u4f9d\u8d56\u6ce8\u5165"})," - \u7ba1\u7406\u7ec4\u4ef6\u4f9d\u8d56"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"\u4e0a\u4e00\u6b65"}),": ",(0,t.jsx)(n.a,{href:"/hestjs-demo/zh-CN/docs/getting-started/cli-usage",children:"\u2190 CLI \u5de5\u5177\u4f7f\u7528"})," | ",(0,t.jsx)(n.strong,{children:"\u4e0b\u4e00\u6b65"}),": ",(0,t.jsx)(n.a,{href:"/hestjs-demo/zh-CN/docs/fundamentals/modules",children:"\u6a21\u5757\u7cfb\u7edf \u2192"})]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>o});var s=r(6540);const t={},i=s.createContext(t);function a(e){const n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);