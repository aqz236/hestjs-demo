"use strict";(self.webpackChunkhestjs_docs=self.webpackChunkhestjs_docs||[]).push([[9493],{5623:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"getting-started/first-application","title":"\u521b\u5efa\u7b2c\u4e00\u4e2a\u5e94\u7528","description":"\u672c\u6307\u5357\u5c06\u5e26\u4f60\u4e00\u6b65\u6b65\u521b\u5efa\u4e00\u4e2a\u5b8c\u6574\u7684 HestJS \u5e94\u7528\uff0c\u5305\u542b\u7528\u6237\u7ba1\u7406\u529f\u80fd\u3001\u6570\u636e\u9a8c\u8bc1\u3001API \u6587\u6863\u7b49\u7279\u6027\u3002","source":"@site/docs/getting-started/first-application.md","sourceDirName":"getting-started","slug":"/getting-started/first-application","permalink":"/hestjs-demo/docs/getting-started/first-application","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/getting-started/first-application.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"\u5b89\u88c5","permalink":"/hestjs-demo/docs/getting-started/installation"},"next":{"title":"\u9879\u76ee\u7ed3\u6784","permalink":"/hestjs-demo/docs/getting-started/project-structure"}}');var t=s(4848),o=s(8453);const i={},a="\u521b\u5efa\u7b2c\u4e00\u4e2a\u5e94\u7528",l={},c=[{value:"\ud83c\udfaf \u5e94\u7528\u6982\u89c8",id:"-\u5e94\u7528\u6982\u89c8",level:2},{value:"\ud83d\udcc1 \u9879\u76ee\u7ed3\u6784",id:"-\u9879\u76ee\u7ed3\u6784",level:2},{value:"\ud83c\udfd7\ufe0f \u6b65\u9aa4 1: \u521b\u5efa\u5b9e\u4f53\u548c DTO",id:"\ufe0f-\u6b65\u9aa4-1-\u521b\u5efa\u5b9e\u4f53\u548c-dto",level:2},{value:"\u7528\u6237\u5b9e\u4f53",id:"\u7528\u6237\u5b9e\u4f53",level:3},{value:"\u7528\u6237 DTO",id:"\u7528\u6237-dto",level:3},{value:"\ud83d\udd27 \u6b65\u9aa4 2: \u521b\u5efa\u670d\u52a1\u5c42",id:"-\u6b65\u9aa4-2-\u521b\u5efa\u670d\u52a1\u5c42",level:2},{value:"\ud83c\udfae \u6b65\u9aa4 3: \u521b\u5efa\u63a7\u5236\u5668",id:"-\u6b65\u9aa4-3-\u521b\u5efa\u63a7\u5236\u5668",level:2},{value:"\ud83d\udce6 \u6b65\u9aa4 4: \u521b\u5efa\u6a21\u5757",id:"-\u6b65\u9aa4-4-\u521b\u5efa\u6a21\u5757",level:2},{value:"\ud83d\udee1\ufe0f \u6b65\u9aa4 5: \u6dfb\u52a0\u4e2d\u95f4\u4ef6",id:"\ufe0f-\u6b65\u9aa4-5-\u6dfb\u52a0\u4e2d\u95f4\u4ef6",level:2},{value:"\u5f02\u5e38\u5904\u7406\u4e2d\u95f4\u4ef6",id:"\u5f02\u5e38\u5904\u7406\u4e2d\u95f4\u4ef6",level:3},{value:"\u54cd\u5e94\u5305\u88c5\u4e2d\u95f4\u4ef6",id:"\u54cd\u5e94\u5305\u88c5\u4e2d\u95f4\u4ef6",level:3},{value:"\ud83d\udd27 \u6b65\u9aa4 6: \u914d\u7f6e\u5e94\u7528\u6a21\u5757",id:"-\u6b65\u9aa4-6-\u914d\u7f6e\u5e94\u7528\u6a21\u5757",level:2},{value:"\ud83d\ude80 \u6b65\u9aa4 7: \u5e94\u7528\u5165\u53e3",id:"-\u6b65\u9aa4-7-\u5e94\u7528\u5165\u53e3",level:2},{value:"\ud83e\uddea \u6b65\u9aa4 8: \u6d4b\u8bd5\u5e94\u7528",id:"-\u6b65\u9aa4-8-\u6d4b\u8bd5\u5e94\u7528",level:2},{value:"\u6d4b\u8bd5 API \u7aef\u70b9",id:"\u6d4b\u8bd5-api-\u7aef\u70b9",level:3},{value:"\u67e5\u770b API \u6587\u6863",id:"\u67e5\u770b-api-\u6587\u6863",level:3},{value:"\ud83c\udf89 \u5b8c\u6210\uff01",id:"-\u5b8c\u6210",level:2},{value:"\ud83d\udcda \u4e0b\u4e00\u6b65",id:"-\u4e0b\u4e00\u6b65",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"\u521b\u5efa\u7b2c\u4e00\u4e2a\u5e94\u7528",children:"\u521b\u5efa\u7b2c\u4e00\u4e2a\u5e94\u7528"})}),"\n",(0,t.jsx)(n.p,{children:"\u672c\u6307\u5357\u5c06\u5e26\u4f60\u4e00\u6b65\u6b65\u521b\u5efa\u4e00\u4e2a\u5b8c\u6574\u7684 HestJS \u5e94\u7528\uff0c\u5305\u542b\u7528\u6237\u7ba1\u7406\u529f\u80fd\u3001\u6570\u636e\u9a8c\u8bc1\u3001API \u6587\u6863\u7b49\u7279\u6027\u3002"}),"\n",(0,t.jsx)(n.h2,{id:"-\u5e94\u7528\u6982\u89c8",children:"\ud83c\udfaf \u5e94\u7528\u6982\u89c8"}),"\n",(0,t.jsx)(n.p,{children:"\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u7528\u6237\u7ba1\u7406 API\uff0c\u5305\u542b\u4ee5\u4e0b\u529f\u80fd\uff1a"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u7528\u6237\u5217\u8868\u67e5\u8be2"}),"\n",(0,t.jsx)(n.li,{children:"\u521b\u5efa\u65b0\u7528\u6237"}),"\n",(0,t.jsx)(n.li,{children:"\u83b7\u53d6\u7528\u6237\u8be6\u60c5"}),"\n",(0,t.jsx)(n.li,{children:"\u6570\u636e\u9a8c\u8bc1"}),"\n",(0,t.jsx)(n.li,{children:"API \u6587\u6863\u751f\u6210"}),"\n",(0,t.jsx)(n.li,{children:"\u4e2d\u95f4\u4ef6\u9519\u8bef\u5904\u7406"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"-\u9879\u76ee\u7ed3\u6784",children:"\ud83d\udcc1 \u9879\u76ee\u7ed3\u6784"}),"\n",(0,t.jsx)(n.p,{children:"\u9996\u5148\uff0c\u8ba9\u6211\u4eec\u521b\u5efa\u9879\u76ee\u7684\u57fa\u672c\u7ed3\u6784\uff1a"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"src/\n\u251c\u2500\u2500 index.ts                    # \u5e94\u7528\u5165\u53e3\n\u251c\u2500\u2500 app.module.ts              # \u6839\u6a21\u5757\n\u251c\u2500\u2500 app.controller.ts          # \u5e94\u7528\u63a7\u5236\u5668\n\u251c\u2500\u2500 app.service.ts             # \u5e94\u7528\u670d\u52a1\n\u251c\u2500\u2500 modules/                   # \u529f\u80fd\u6a21\u5757\n\u2502   \u2514\u2500\u2500 users/                 # \u7528\u6237\u6a21\u5757\n\u2502       \u251c\u2500\u2500 users.controller.ts\n\u2502       \u251c\u2500\u2500 users.service.ts\n\u2502       \u251c\u2500\u2500 users.module.ts\n\u2502       \u251c\u2500\u2500 dto/\n\u2502       \u2502   \u251c\u2500\u2500 create-user.dto.ts\n\u2502       \u2502   \u2514\u2500\u2500 user.dto.ts\n\u2502       \u2514\u2500\u2500 entities/\n\u2502           \u2514\u2500\u2500 user.entity.ts\n\u251c\u2500\u2500 common/                    # \u516c\u5171\u7ec4\u4ef6\n\u2502   \u2514\u2500\u2500 middleware/\n\u2502       \u251c\u2500\u2500 exception.middleware.ts\n\u2502       \u2514\u2500\u2500 response.middleware.ts\n\u2514\u2500\u2500 config/\n    \u2514\u2500\u2500 env.ts\n"})}),"\n",(0,t.jsx)(n.h2,{id:"\ufe0f-\u6b65\u9aa4-1-\u521b\u5efa\u5b9e\u4f53\u548c-dto",children:"\ud83c\udfd7\ufe0f \u6b65\u9aa4 1: \u521b\u5efa\u5b9e\u4f53\u548c DTO"}),"\n",(0,t.jsx)(n.h3,{id:"\u7528\u6237\u5b9e\u4f53",children:"\u7528\u6237\u5b9e\u4f53"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// src/modules/users/entities/user.entity.ts\nexport interface User {\n  id: string;\n  name: string;\n  email: string;\n  age: number;\n  createdAt: Date;\n  updatedAt: Date;\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"\u7528\u6237-dto",children:"\u7528\u6237 DTO"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// src/modules/users/dto/create-user.dto.ts\nimport { IsString, IsEmail, IsNumber } from '@hestjs/validation';\n\nexport class CreateUserDto {\n  @IsString({ minLength: 2, maxLength: 50 })\n  name!: string;\n\n  @IsEmail()\n  email!: string;\n\n  @IsNumber({ minimum: 0, maximum: 150 })\n  age!: number;\n}\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// src/modules/users/dto/user.dto.ts\nexport class UserDto {\n  id!: string;\n  name!: string;\n  email!: string;\n  age!: number;\n  createdAt!: Date;\n  updatedAt!: Date;\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"-\u6b65\u9aa4-2-\u521b\u5efa\u670d\u52a1\u5c42",children:"\ud83d\udd27 \u6b65\u9aa4 2: \u521b\u5efa\u670d\u52a1\u5c42"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// src/modules/users/users.service.ts\nimport { injectable } from 'tsyringe';\nimport { logger } from '@hestjs/logger';\nimport { User } from './entities/user.entity';\nimport { CreateUserDto } from './dto/create-user.dto';\n\n@injectable()\nexport class UsersService {\n  private users: User[] = [\n    {\n      id: '1',\n      name: 'John Doe',\n      email: 'john@example.com',\n      age: 30,\n      createdAt: new Date('2024-01-01'),\n      updatedAt: new Date('2024-01-01'),\n    },\n    {\n      id: '2',\n      name: 'Jane Smith',\n      email: 'jane@example.com',\n      age: 25,\n      createdAt: new Date('2024-01-02'),\n      updatedAt: new Date('2024-01-02'),\n    },\n  ];\n\n  async findAll(): Promise<User[]> {\n    logger.info('Fetching all users');\n    return this.users;\n  }\n\n  async findById(id: string): Promise<User | null> {\n    logger.info(`Fetching user with id: ${id}`);\n    const user = this.users.find(user => user.id === id);\n    if (!user) {\n      logger.warn(`User with id ${id} not found`);\n      return null;\n    }\n    return user;\n  }\n\n  async create(createUserDto: CreateUserDto): Promise<User> {\n    logger.info('Creating new user', createUserDto);\n  \n    // \u68c0\u67e5\u90ae\u7bb1\u662f\u5426\u5df2\u5b58\u5728\n    const existingUser = this.users.find(user => user.email === createUserDto.email);\n    if (existingUser) {\n      throw new Error('User with this email already exists');\n    }\n\n    const newUser: User = {\n      id: (this.users.length + 1).toString(),\n      ...createUserDto,\n      createdAt: new Date(),\n      updatedAt: new Date(),\n    };\n\n    this.users.push(newUser);\n    logger.info(`User created with id: ${newUser.id}`);\n  \n    return newUser;\n  }\n\n  async update(id: string, updateData: Partial<CreateUserDto>): Promise<User | null> {\n    logger.info(`Updating user with id: ${id}`, updateData);\n  \n    const userIndex = this.users.findIndex(user => user.id === id);\n    if (userIndex === -1) {\n      logger.warn(`User with id ${id} not found for update`);\n      return null;\n    }\n\n    const updatedUser = {\n      ...this.users[userIndex],\n      ...updateData,\n      updatedAt: new Date(),\n    };\n\n    this.users[userIndex] = updatedUser;\n    logger.info(`User with id ${id} updated successfully`);\n  \n    return updatedUser;\n  }\n\n  async delete(id: string): Promise<boolean> {\n    logger.info(`Deleting user with id: ${id}`);\n  \n    const userIndex = this.users.findIndex(user => user.id === id);\n    if (userIndex === -1) {\n      logger.warn(`User with id ${id} not found for deletion`);\n      return false;\n    }\n\n    this.users.splice(userIndex, 1);\n    logger.info(`User with id ${id} deleted successfully`);\n  \n    return true;\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"-\u6b65\u9aa4-3-\u521b\u5efa\u63a7\u5236\u5668",children:"\ud83c\udfae \u6b65\u9aa4 3: \u521b\u5efa\u63a7\u5236\u5668"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// src/modules/users/users.controller.ts\nimport { \n  Controller, \n  Get, \n  Post, \n  Put, \n  Delete, \n  Body, \n  Param\n} from '@hestjs/core';\nimport { \n  ApiOperation, \n  ApiResponse, \n  ApiBody, \n  ApiParam \n} from '@hestjs/scalar';\nimport { Context } from 'hono';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UserDto } from './dto/user.dto';\n\n@Controller('/api/users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Get()\n  @ApiOperation({ \n    summary: 'Get all users', \n    description: 'Retrieve a list of all users' \n  })\n  @ApiResponse({ \n    status: 200, \n    description: 'List of users retrieved successfully',\n    content: {\n      'application/json': {\n        example: {\n          data: [\n            {\n              id: '1',\n              name: 'John Doe',\n              email: 'john@example.com',\n              age: 30,\n              createdAt: '2024-01-01T00:00:00.000Z',\n              updatedAt: '2024-01-01T00:00:00.000Z'\n            }\n          ],\n          message: 'Users retrieved successfully'\n        }\n      }\n    }\n  })\n  async findAll(c: Context) {\n    const users = await this.usersService.findAll();\n    return c.json({\n      data: users,\n      message: 'Users retrieved successfully',\n    });\n  }\n\n  @Get('/:id')\n  @ApiOperation({ \n    summary: 'Get user by ID', \n    description: 'Retrieve a specific user by their ID' \n  })\n  @ApiParam({ name: 'id', description: 'User ID', example: '1' })\n  @ApiResponse({ \n    status: 200, \n    description: 'User found',\n    content: {\n      'application/json': {\n        example: {\n          data: {\n            id: '1',\n            name: 'John Doe',\n            email: 'john@example.com',\n            age: 30,\n            createdAt: '2024-01-01T00:00:00.000Z',\n            updatedAt: '2024-01-01T00:00:00.000Z'\n          },\n          message: 'User found'\n        }\n      }\n    }\n  })\n  @ApiResponse({ \n    status: 404, \n    description: 'User not found' \n  })\n  async findById(@Param('id') id: string, c: Context) {\n    const user = await this.usersService.findById(id);\n    if (!user) {\n      return c.status(404).json({\n        statusCode: 404,\n        message: 'User not found',\n      });\n    }\n\n    return c.json({\n      data: user,\n      message: 'User found',\n    });\n  }\n\n  @Post()\n  @ApiOperation({ \n    summary: 'Create a new user', \n    description: 'Create a new user with the provided information' \n  })\n  @ApiBody({\n    description: 'User creation data',\n    content: {\n      'application/json': {\n        example: {\n          name: 'John Doe',\n          email: 'john@example.com',\n          age: 30\n        }\n      }\n    }\n  })\n  @ApiResponse({ \n    status: 201, \n    description: 'User created successfully',\n    content: {\n      'application/json': {\n        example: {\n          data: {\n            id: '3',\n            name: 'John Doe',\n            email: 'john@example.com',\n            age: 30,\n            createdAt: '2024-01-03T00:00:00.000Z',\n            updatedAt: '2024-01-03T00:00:00.000Z'\n          },\n          message: 'User created successfully'\n        }\n      }\n    }\n  })\n  @ApiResponse({ \n    status: 400, \n    description: 'Invalid input data' \n  })\n  async create(@Body(CreateUserDto) createUserDto: CreateUserDto, c: Context) {\n    try {\n      const user = await this.usersService.create(createUserDto);\n      return c.status(201).json({\n        data: user,\n        message: 'User created successfully',\n      });\n    } catch (error) {\n      return c.status(400).json({\n        message: error instanceof Error ? error.message : 'Failed to create user',\n      });\n    }\n  }\n\n  @Put('/:id')\n  @ApiOperation({ \n    summary: 'Update user', \n    description: 'Update an existing user by ID' \n  })\n  @ApiParam({ name: 'id', description: 'User ID', example: '1' })\n  @ApiBody({\n    description: 'User update data',\n    content: {\n      'application/json': {\n        example: {\n          name: 'John Smith',\n          age: 31\n        }\n      }\n    }\n  })\n  @ApiResponse({ \n    status: 200, \n    description: 'User updated successfully' \n  })\n  @ApiResponse({ \n    status: 404, \n    description: 'User not found' \n  })\n  async update(\n    @Param('id') id: string,\n    @Body() updateData: Partial<CreateUserDto>,\n    c: Context\n  ) {\n    const user = await this.usersService.update(id, updateData);\n    if (!user) {\n      return c.status(404).json({\n        message: 'User not found',\n      });\n    }\n\n    return c.json({\n      data: user,\n      message: 'User updated successfully',\n    });\n  }\n\n  @Delete('/:id')\n  @ApiOperation({ \n    summary: 'Delete user', \n    description: 'Delete a user by ID' \n  })\n  @ApiParam({ name: 'id', description: 'User ID', example: '1' })\n  @ApiResponse({ \n    status: 200, \n    description: 'User deleted successfully' \n  })\n  @ApiResponse({ \n    status: 404, \n    description: 'User not found' \n  })\n  async delete(@Param('id') id: string, c: Context) {\n    const deleted = await this.usersService.delete(id);\n    if (!deleted) {\n      return c.status(404).json({\n        message: 'User not found',\n      });\n    }\n\n    return c.json({\n      message: 'User deleted successfully',\n    });\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"-\u6b65\u9aa4-4-\u521b\u5efa\u6a21\u5757",children:"\ud83d\udce6 \u6b65\u9aa4 4: \u521b\u5efa\u6a21\u5757"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// src/modules/users/users.module.ts\nimport { Module } from '@hestjs/core';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './users.service';\n\n@Module({\n  controllers: [UsersController],\n  providers: [UsersService],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"\ufe0f-\u6b65\u9aa4-5-\u6dfb\u52a0\u4e2d\u95f4\u4ef6",children:"\ud83d\udee1\ufe0f \u6b65\u9aa4 5: \u6dfb\u52a0\u4e2d\u95f4\u4ef6"}),"\n",(0,t.jsx)(n.h3,{id:"\u5f02\u5e38\u5904\u7406\u4e2d\u95f4\u4ef6",children:"\u5f02\u5e38\u5904\u7406\u4e2d\u95f4\u4ef6"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// src/common/middleware/exception.middleware.ts\nimport { Context, Next } from 'hono';\nimport { logger } from '@hestjs/logger';\n\nexport const exceptionMiddleware = async (c: Context, next: Next) => {\n  try {\n    await next();\n  } catch (error) {\n    logger.error('HTTP Exception:', {\n      error: error instanceof Error ? error.message : 'Unknown error',\n      stack: error instanceof Error ? error.stack : undefined,\n      path: c.req.path,\n      method: c.req.method,\n    });\n\n    const err = error instanceof Error ? error : new Error('Unknown error');\n\n    // \u5904\u7406\u81ea\u5b9a\u4e49\u9519\u8bef\n    if (err.message.includes('already exists')) {\n      return c.json({\n        statusCode: 409,\n        message: err.message,\n        timestamp: new Date().toISOString(),\n        path: c.req.path,\n      }, 409);\n    }\n\n    // \u5904\u7406\u9a8c\u8bc1\u9519\u8bef\n    if (err.message.includes('validation')) {\n      return c.json({\n        statusCode: 400,\n        message: 'Validation failed',\n        details: err.message,\n        timestamp: new Date().toISOString(),\n        path: c.req.path,\n      }, 400);\n    }\n\n    // \u9ed8\u8ba4\u9519\u8bef\u5904\u7406\n    return c.json({\n      statusCode: 500,\n      message: 'Internal server error',\n      timestamp: new Date().toISOString(),\n      path: c.req.path,\n    }, 500);\n  }\n};\n"})}),"\n",(0,t.jsx)(n.h3,{id:"\u54cd\u5e94\u5305\u88c5\u4e2d\u95f4\u4ef6",children:"\u54cd\u5e94\u5305\u88c5\u4e2d\u95f4\u4ef6"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// src/common/middleware/response.middleware.ts\nimport { Context, Next } from 'hono';\nimport { logger } from '@hestjs/logger';\n\nexport const responseMiddleware = async (c: Context, next: Next) => {\n  const start = Date.now();\n  \n  logger.info(`\u2192 ${c.req.method} ${c.req.path}`);\n  \n  await next();\n  \n  // \u8df3\u8fc7\u6587\u6863\u76f8\u5173\u7684\u8def\u5f84\n  if (c.req.path === '/openapi.json' || c.req.path === '/docs' || c.req.path.startsWith('/api-docs')) {\n    return;\n  }\n  \n  const duration = Date.now() - start;\n  logger.info(`\u2190 ${c.req.method} ${c.req.path} (${duration}ms)`);\n  \n  // \u53ea\u5305\u88c5JSON\u54cd\u5e94\uff0c\u4e14\u54cd\u5e94\u72b6\u6001\u4e3a2xx\n  const contentType = c.res.headers.get('content-type');\n  if (contentType?.includes('application/json') && c.res.status >= 200 && c.res.status < 300) {\n    try {\n      // \u514b\u9686\u54cd\u5e94\u4ee5\u907f\u514d\u6d88\u8017\u539f\u59cb\u54cd\u5e94\u4f53\n      const responseClone = c.res.clone();\n      const originalResponse = await responseClone.json();\n    \n      const wrappedResponse = {\n        success: true,\n        data: originalResponse,\n        timestamp: new Date().toISOString(),\n        duration: `${duration}ms`,\n      };\n    \n      return c.json(wrappedResponse);\n    } catch (error) {\n      // \u5982\u679c\u65e0\u6cd5\u89e3\u6790JSON\uff0c\u5c31\u4fdd\u6301\u539f\u54cd\u5e94\n      console.warn('Failed to wrap response:', error);\n    }\n  }\n};\n"})}),"\n",(0,t.jsx)(n.h2,{id:"-\u6b65\u9aa4-6-\u914d\u7f6e\u5e94\u7528\u6a21\u5757",children:"\ud83d\udd27 \u6b65\u9aa4 6: \u914d\u7f6e\u5e94\u7528\u6a21\u5757"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// src/app.controller.ts\nimport { Controller, Get } from '@hestjs/core';\nimport { ApiOperation, ApiResponse } from '@hestjs/scalar';\nimport { Context } from 'hono';\n\n@Controller()\nexport class AppController {\n  @Get('/health')\n  @ApiOperation({ \n    summary: 'Health check', \n    description: 'Check if the application is running' \n  })\n  @ApiResponse({ \n    status: 200, \n    description: 'Application is healthy',\n    content: {\n      'application/json': {\n        example: {\n          status: 'ok',\n          message: 'HestJS application is running!',\n          timestamp: '2024-01-01T00:00:00.000Z'\n        }\n      }\n    }\n  })\n  health(c: Context) {\n    return c.json({\n      status: 'ok',\n      message: 'HestJS application is running!',\n      timestamp: new Date().toISOString(),\n    });\n  }\n\n  @Get()\n  @ApiOperation({ \n    summary: 'Welcome message', \n    description: 'Get a welcome message from the API' \n  })\n  @ApiResponse({ \n    status: 200, \n    description: 'Welcome message',\n    content: {\n      'application/json': {\n        example: {\n          message: 'Welcome to HestJS!',\n          version: '1.0.0'\n        }\n      }\n    }\n  })\n  welcome(c: Context) {\n    return c.json({\n      message: 'Welcome to HestJS!',\n      version: '1.0.0',\n    });\n  }\n}\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// src/app.service.ts\nimport { injectable } from 'tsyringe';\nimport { logger } from '@hestjs/logger';\n\n@injectable()\nexport class AppService {\n  getHello(): string {\n    logger.info('Getting hello message');\n    return 'Hello from HestJS!';\n  }\n}\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// src/app.module.ts\nimport { Module } from '@hestjs/core';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { UsersModule } from './modules/users/users.module';\n\n@Module({\n  imports: [UsersModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"-\u6b65\u9aa4-7-\u5e94\u7528\u5165\u53e3",children:"\ud83d\ude80 \u6b65\u9aa4 7: \u5e94\u7528\u5165\u53e3"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// src/index.ts\nimport { Hono } from 'hono';\nimport { cors } from 'hono/cors';\nimport { HestFactory } from '@hestjs/core';\nimport { logger } from '@hestjs/logger';\nimport '@hestjs/scalar';\nimport { AppModule } from './app.module';\nimport { exceptionMiddleware } from './common/middleware/exception.middleware';\nimport { responseMiddleware } from './common/middleware/response.middleware';\n\nasync function bootstrap() {\n  try {\n    logger.info('\ud83d\ude80 Starting HestJS application...');\n\n    // \u521b\u5efa Hono \u5b9e\u4f8b\n    const hono = new Hono();\n  \n    // \u914d\u7f6e CORS\n    hono.use(cors({\n      origin: ['http://localhost:3000', 'http://localhost:3001'],\n      credentials: true,\n    }));\n\n    // \u6ce8\u518c\u5168\u5c40\u4e2d\u95f4\u4ef6\n    hono.use('*', exceptionMiddleware);\n    hono.use('*', responseMiddleware);\n\n    // \u521b\u5efa\u5e94\u7528\u5b9e\u4f8b\n    const app = await HestFactory.create(hono, AppModule);\n\n    // \u914d\u7f6e API \u6587\u6863, \u4f1a\u81ea\u52a8\u5c06\u6240\u6709\u7684Controller\u5c55\u793a\u5230docs\u4e2d\n    app.useSwagger({\n      info: {\n        title: 'HestJS User Management API',\n        version: '1.0.0',\n        description: '\u4e00\u4e2a\u4f7f\u7528 HestJS \u6784\u5efa\u7684\u7528\u6237\u7ba1\u7406 API \u793a\u4f8b\uff0c\u5c55\u793a\u6846\u67b6\u7684\u6838\u5fc3\u529f\u80fd\u548c\u6700\u4f73\u5b9e\u8df5\u3002',\n      },\n      servers: [\n        {\n          url: 'http://localhost:3000',\n          description: 'Development server',\n        },\n      ],\n    }, {\n      path: '/docs',\n      theme: 'elysia',\n      enableMarkdown: true,\n    });\n\n    const port = 3000;\n  \n    // \u542f\u52a8\u670d\u52a1\u5668\n    Bun.serve({\n      port,\n      fetch: hono.fetch,\n      reusePort: true,\n    });\n\n    logger.info(`\ud83d\ude80 Application is running on: http://localhost:${port}`);\n    logger.info('\ud83d\udcda API Documentation available at:');\n    logger.info(`  \u2022 Scalar UI: http://localhost:${port}/docs`);\n    logger.info(`  \u2022 OpenAPI JSON: http://localhost:${port}/openapi.json`);\n    logger.info('\ud83d\udcca Available endpoints:');\n    logger.info('  \u2022 GET /health - Health check');\n    logger.info('  \u2022 GET /api/users - Get all users');\n    logger.info('  \u2022 POST /api/users - Create a user');\n    logger.info('  \u2022 GET /api/users/:id - Get user by ID');\n    logger.info('  \u2022 PUT /api/users/:id - Update user');\n    logger.info('  \u2022 DELETE /api/users/:id - Delete user');\n\n  } catch (error) {\n    logger.error('\u274c Failed to start application:', error);\n    process.exit(1);\n  }\n}\n\nbootstrap();\n"})}),"\n",(0,t.jsx)(n.h2,{id:"-\u6b65\u9aa4-8-\u6d4b\u8bd5\u5e94\u7528",children:"\ud83e\uddea \u6b65\u9aa4 8: \u6d4b\u8bd5\u5e94\u7528"}),"\n",(0,t.jsx)(n.p,{children:"\u542f\u52a8\u5f00\u53d1\u670d\u52a1\u5668\uff1a"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"bun run dev\n"})}),"\n",(0,t.jsx)(n.h3,{id:"\u6d4b\u8bd5-api-\u7aef\u70b9",children:"\u6d4b\u8bd5 API \u7aef\u70b9"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"\u5065\u5eb7\u68c0\u67e5"})}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"curl http://localhost:3000/health\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"\u83b7\u53d6\u6240\u6709\u7528\u6237"})}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"curl http://localhost:3000/api/users\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"3",children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"\u521b\u5efa\u65b0\u7528\u6237"})}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'curl -X POST http://localhost:3000/api/users \\\n  -H "Content-Type: application/json" \\\n  -d \'{\n    "name": "Alice Johnson",\n    "email": "alice@example.com",\n    "age": 28\n  }\'\n'})}),"\n",(0,t.jsxs)(n.ol,{start:"4",children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"\u83b7\u53d6\u7279\u5b9a\u7528\u6237"})}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"curl http://localhost:3000/api/users/1\n"})}),"\n",(0,t.jsx)(n.h3,{id:"\u67e5\u770b-api-\u6587\u6863",children:"\u67e5\u770b API \u6587\u6863"}),"\n",(0,t.jsxs)(n.p,{children:["\u8bbf\u95ee ",(0,t.jsx)(n.code,{children:"http://localhost:3000/docs"})," \u67e5\u770b\u81ea\u52a8\u751f\u6210\u7684 API \u6587\u6863\u3002"]}),"\n",(0,t.jsx)(n.h2,{id:"-\u5b8c\u6210",children:"\ud83c\udf89 \u5b8c\u6210\uff01"}),"\n",(0,t.jsx)(n.p,{children:"\u606d\u559c\uff01\u4f60\u5df2\u7ecf\u6210\u529f\u521b\u5efa\u4e86\u7b2c\u4e00\u4e2a HestJS \u5e94\u7528\u3002\u8fd9\u4e2a\u5e94\u7528\u5305\u542b\u4e86\uff1a"}),"\n",(0,t.jsxs)(n.p,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"RESTful API"})," - \u5b8c\u6574\u7684 CRUD \u64cd\u4f5c\n\u2705 ",(0,t.jsx)(n.strong,{children:"\u6570\u636e\u9a8c\u8bc1"})," - \u57fa\u4e8e TypeBox \u7684\u9a8c\u8bc1\u7cfb\u7edf\n\u2705 ",(0,t.jsx)(n.strong,{children:"\u4f9d\u8d56\u6ce8\u5165"})," - TSyringe \u9a71\u52a8\u7684 DI \u5bb9\u5668\n\u2705 ",(0,t.jsx)(n.strong,{children:"\u6a21\u5757\u5316\u67b6\u6784"})," - \u6e05\u6670\u7684\u4ee3\u7801\u7ec4\u7ec7\n\u2705 ",(0,t.jsx)(n.strong,{children:"\u4e2d\u95f4\u4ef6\u7cfb\u7edf"})," - \u5f02\u5e38\u5904\u7406\u548c\u54cd\u5e94\u5305\u88c5\n\u2705 ",(0,t.jsx)(n.strong,{children:"API \u6587\u6863"})," - \u81ea\u52a8\u751f\u6210\u7684 OpenAPI \u6587\u6863\n\u2705 ",(0,t.jsx)(n.strong,{children:"\u65e5\u5fd7\u7cfb\u7edf"})," - \u7ed3\u6784\u5316\u65e5\u5fd7\u8bb0\u5f55\n\u2705 ",(0,t.jsx)(n.strong,{children:"\u9519\u8bef\u5904\u7406"})," - \u7edf\u4e00\u7684\u9519\u8bef\u5904\u7406\u673a\u5236"]}),"\n",(0,t.jsx)(n.h2,{id:"-\u4e0b\u4e00\u6b65",children:"\ud83d\udcda \u4e0b\u4e00\u6b65"}),"\n",(0,t.jsx)(n.p,{children:"\u7ee7\u7eed\u6df1\u5165\u5b66\u4e60 HestJS\uff1a"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/hestjs-demo/docs/getting-started/project-structure",children:"\u9879\u76ee\u7ed3\u6784\u8bf4\u660e"})," - \u4e86\u89e3\u9879\u76ee\u7ec4\u7ec7\u6700\u4f73\u5b9e\u8df5"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/hestjs-demo/docs/fundamentals/controllers",children:"\u57fa\u7840\u6982\u5ff5"})," - \u6df1\u5165\u5b66\u4e60\u63a7\u5236\u5668"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/hestjs-demo/docs/fundamentals/modules",children:"\u6a21\u5757\u7cfb\u7edf"})," - \u7406\u89e3\u6a21\u5757\u5316\u67b6\u6784"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/hestjs-demo/docs/fundamentals/dependency-injection",children:"\u4f9d\u8d56\u6ce8\u5165"})," - \u638c\u63e1 DI \u7cfb\u7edf"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"\u4e0a\u4e00\u6b65"}),": ",(0,t.jsx)(n.a,{href:"/hestjs-demo/docs/getting-started/installation",children:"\u2190 \u5b89\u88c5\u548c\u73af\u5883\u914d\u7f6e"})," | ",(0,t.jsx)(n.strong,{children:"\u4e0b\u4e00\u6b65"}),": ",(0,t.jsx)(n.a,{href:"/hestjs-demo/docs/getting-started/project-structure",children:"\u9879\u76ee\u7ed3\u6784\u8bf4\u660e \u2192"})]})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>a});var r=s(6540);const t={},o=r.createContext(t);function i(e){const n=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);